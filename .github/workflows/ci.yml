# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.github/ISSUE_TEMPLATE/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.github/ISSUE_TEMPLATE/**'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Ruff Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install ruff
        run: pip install ruff
      - name: Run ruff
        run: ruff check .

  typecheck:
    name: Mypy Type Check
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install mypy and deps
        run: |
          pip install mypy
          # install your app deps if needed for type stubs
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run mypy (skip if no app/)
        run: |
          if [ -d app ]; then mypy app; else echo "No app/ dir; skipping mypy."; fi

  tests:
    name: Pytest
    runs-on: ubuntu-latest
    needs: [typecheck]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install deps
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest
      - name: Ensure tests dir exists (placeholder)
        run: |
          mkdir -p tests
          [ -f tests/test_placeholder.py ] || echo "def test_placeholder(): assert True" > tests/test_placeholder.py
      - name: Run tests
        run: pytest -q
