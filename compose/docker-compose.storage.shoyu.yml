services:
  minio:
    image: minio/minio:latest
    container_name: sushi_minio
    profiles: ["hosomaki", "shoyu"]  # Core infrastructure
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_BROWSER_REDIRECT_URL}
    volumes:
      - ./data/minio:/data
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    networks:
      - sushi_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    labels:
      - "homepage.group=Storage"
      - "homepage.name=MinIO"
      - "homepage.icon=minio.png"
      - "homepage.href=http://localhost:${MINIO_CONSOLE_PORT}"

  minio-client:
    image: minio/mc:latest
    container_name: sushi_minio_client
    profiles: ["hosomaki", "shoyu"]
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add sushi http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb sushi/models --ignore-existing;
      /usr/bin/mc mb sushi/datasets --ignore-existing;
      /usr/bin/mc mb sushi/artifacts --ignore-existing;
      /usr/bin/mc policy set public sushi/models;
      exit 0;
      "
    networks:
      - sushi_network